15个

__construct()， 具有构造函数的类会在每次创建新对象时先调用此方法
__destruct()， PHP 5 引入了析构函数的概念，这类似于其它面向对象的语言，如 C++。析构函数会在到某个对象的所有引用都被删除或者当对象被显式销毁时执行。
__call()， 在对象中调用一个不可访问方法时，__call() 会被调用。
__callStatic()，  在静态上下文中调用一个不可访问方法时，__callStatic() 会被调用。
__get()，  读取不可访问属性的值时，__get() 会被调用。
__set()， 在给不可访问属性赋值时，__set() 会被调用。
__isset()， 当对不可访问属性调用 isset() 或 empty() 时，__isset() 会被调用。
__unset()， 当对不可访问属性调用 unset() 时，__unset() 会被调用。
__sleep()， serialize() 函数会检查类中是否存在一个魔术方法 __sleep()。如果存在，该方法会先被调用，然后才执行序列化操作。
__wakeup()，  unserialize() 会检查是否存在一个 __wakeup() 方法。 
__toString()， 用于一个类被当成字符串时应怎样回应
__invoke()，  当尝试以调用函数的方式调用一个对象时，__invoke() 方法会被自动调用。
__set_state()， 自 PHP 5.1.0 起当调用 var_export() 导出类时，此静态 方法会被调用。
__clone()     当复制完成时，如果定义了 __clone() 方法，则新创建的对象（复制生成的对象）中的 __clone() 方法会被调用，可用于修改属性的值（如果有必要的话）。
__debugInfo()  This method is called by var_dump() when dumping an object to get the properties that should be shown. If the method isn't defined on an object, then all public, protected and private properties will be shown.
This feature was added in PHP 5.6.0.