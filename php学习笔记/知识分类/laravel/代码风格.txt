简单的接口
分三层：   
1.参数的处理
2.查询语句 (query)
3.数据组装返回

参数的验证 <通过检验器进行检验，或者自我封装一个>
在controller层 通过 注入服务类 使用服务
参数的处理可以写在controller层，或者是通过一个方法封装。

query查询语句，复杂的话，可以分开几个部分来写。也方便维护。

数据的组装使用laravel原生的transformer 是非常好。每一个接口都至少有一个transformer。
可能需要调用原生的分页类进行自定义封装分页和数据组装。


现就样品申请详情页接口举例说明



查询语句和服务的关系。
首先复杂的业务才用到服务。如果逻辑简单的话，不用考虑服务。

查询语句可以封装出来。感觉是有点难封装的，因为每个业务需要查询的字段可能不一样。这部分的代码写在层 
// 将 封装id 
// 

查询语句可以封装出来。感觉是有点难封装的，因为每个业务需要查询的字段可能不一样，这部分的代码写在层
controller里面  有什么情况后面再说。



















 