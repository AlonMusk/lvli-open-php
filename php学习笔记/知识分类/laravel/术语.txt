Eloquent是啥？本质是什么，怎么用，优缺点是什么。由于 Eloquent 模型本质上就是查询构建器，你可以在 Eloquent 查询中使用查询构建器的所有方法。
Eloquent 是 Laravel 的 'ORM'，即 'Object Relational Mapping'，对象关系映射。Eloquent 让一个 'Model类' 对应一张数据库表，并且在底层封装了很多 'function'，可以让 Model 类非常方便地调用。 Eloquent 中最复杂也是最难理解的部分——模型间关系。官方英文文档中叫 Relationships，个人认为翻译成 “模型间关系” 比现在的 “关联” 更好理解一点。重要技巧：关系预载入（N+1查找问题）


Builder：这个单词可以直译成构造器，但是“中间操作流”更容易理解，因为数据库操作大部分时候都是链式操作的。中间操作流用面向对象的方法来理解，可以总结成一句话：
创建一个对象，并不断修改它的属性，最后用一个操作来触发数据库操作。

契约是啥。
 控制反转(IoC) 就是说把创建对象的“ 控制权” 进行转移，以前创建对象的主动权和创建时机是由自己把控的，而现在这种权力转移到第三方，也就是 Laravel 中的容器。
服务容器是用来管理类依赖与运行依赖注入的工具。
依赖注入（DI）则是帮助容器实现在运行中动态的为对象提供提依赖的资源
Laravel框架中就是使用服务容器来实现 “ 控制反转 ” 和 “依赖注入 ”。
门面:模拟一个类，提供一个静态魔术方法__callStatic，并将该静态方法映射到真正的方法上。
契约：其实说白了就是类的接口

服务提供者类: XXServiceProvider
使用singleton绑定单例~绑定容器~服务注入~注入依赖
注册服务提供者~追加到config/app.php的providers数组中
注册门面~追加到config/app.php的aliases数组中

依赖注入的使用：
看controller  依赖注入的目的是为了解耦和。说白了就是面向接口编程,通过调用接口的方法,而不直接实例化对象去调用。这样做的好处就是如果添加了另一个种实现类,不需要修改之前代码,只需要修改注入的地方将实现类替换

服务类：把业务逻辑提取出来，放到一个新的第三方类里面，通常，我们将这种第三方类称之为服务类。服务类可以通过注入使用。

仓库类： 
作用是什么？包含了所有对数据的访问功能。
使用（trait/ app() / ::)

trait: 复用机制。属性优先级：调用类 >Trait > 父类


app(): 继承了container，作为一个容器类存在

容器：

幂等操作的特点是其任意多次执行所产生的影响均与一次执行的影响相同
