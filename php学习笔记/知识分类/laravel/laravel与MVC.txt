阻止开发者做出好设计的最大拦路虎就是MVC
模型是用来将我们的应用划分成更小、更清晰的类，使得各代码部分有着明确的权责。
HMVC意味着糟糕的设计：你觉得需要在控制器里面调用其他的控制器？这通常意味着糟糕的程序设计，以及你的控制器里面包含了过多的业务逻辑。好的做法是把控制器中的业务逻辑提取出来，放到一个新的第三方类里面，通常，我们将这种第三方类称之为服务类，这样你就可以在所有其他控制器里面 《《《注入服务类》》》 并使用它们了。

核心思想就是分层：
优化应用目录结构的关键就是对不同组件的责任进行划分，或者说为不同的职责创建不同的层。控制器只负责接收和响应 HTTP 请求，然后调用合适的业务逻辑层的类。你的业务逻辑/领域逻辑层才是应用最核心的部分，其中包含了读取数据，验证数据，执行支付，发送电子邮件，还有程序里所有其他功能的代码。

编写可维护性应用程序的关键之一，就是职责分离

eloquent是啥？eloquent模型是啥？


